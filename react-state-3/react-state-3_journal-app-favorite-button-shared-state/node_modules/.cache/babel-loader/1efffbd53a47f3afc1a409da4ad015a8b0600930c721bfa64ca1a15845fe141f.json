{"ast":null,"code":"var _jsxFileName = \"/Users/benediktbrenk/neuefische/web-challenges/react-state-3/react-state-3_journal-app-favorite-button-shared-state/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport EntriesSection from \"./components/EntriesSection\";\nimport EntryForm from \"./components/EntryForm\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport { uid } from \"uid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialEntries = [{\n  id: 1000,\n  date: \"Feb 5, 2025\",\n  motto: \"We are in a state of chaos\",\n  notes: \"Today I learned about React State. It was fun! I can't wait to learn more.\",\n  isFavorite: false\n}, {\n  id: 999,\n  date: \"Feb 4, 2025\",\n  motto: \"Props, Props, Props\",\n  notes: \"Today I learned about React Props. Mad props to everyone who understands this!\",\n  isFavorite: false\n}, {\n  id: 998,\n  date: \"Feb 3, 2025\",\n  motto: \"How to nest components online fast\",\n  notes: \"Today I learned about React Components and how to nest them like a pro. Application design is so much fun!\",\n  isFavorite: false\n}, {\n  id: 997,\n  date: \"Feb 2, 2025\",\n  motto: \"I'm a React Developer\",\n  notes: \"My React-ion when I learned about React: Yay!\",\n  isFavorite: false\n}];\nfunction App() {\n  _s();\n  const [entries, setEntries] = useState(initialEntries);\n  function handleAddEntry(newEntry) {\n    const date = new Date().toLocaleDateString(\"en-us\", {\n      dateStyle: \"medium\"\n    });\n    setEntries([{\n      id: uid(),\n      date,\n      ...newEntry,\n      isFavorite: false\n    }, ...entries]);\n    console.log(entries);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app__main\",\n      children: [/*#__PURE__*/_jsxDEV(EntryForm, {\n        onAddEntry: handleAddEntry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EntriesSection, {\n        entries: entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6Pl3+fDc8wwMSuu+b7gejQYptm4=\");\n_c = App;\nexport default App;\n\n// - Add the key `isFavorite` with the value `false` to each entry in the `initialEntries` array.\n// - Add the key `isFavorite` with the value `false` to a newly created entry in the function `handleAddEntry`.\n\n// This was important to have a consistent shape of all entry objects ðŸš€\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","EntriesSection","EntryForm","Footer","Header","uid","jsxDEV","_jsxDEV","initialEntries","id","date","motto","notes","isFavorite","App","_s","entries","setEntries","handleAddEntry","newEntry","Date","toLocaleDateString","dateStyle","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddEntry","_c","$RefreshReg$"],"sources":["/Users/benediktbrenk/neuefische/web-challenges/react-state-3/react-state-3_journal-app-favorite-button-shared-state/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport EntriesSection from \"./components/EntriesSection\";\nimport EntryForm from \"./components/EntryForm\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport { uid } from \"uid\";\n\nconst initialEntries = [\n  {\n    id: 1000,\n    date: \"Feb 5, 2025\",\n    motto: \"We are in a state of chaos\",\n    notes:\n      \"Today I learned about React State. It was fun! I can't wait to learn more.\",\n    isFavorite: false,\n  },\n  {\n    id: 999,\n    date: \"Feb 4, 2025\",\n    motto: \"Props, Props, Props\",\n    notes:\n      \"Today I learned about React Props. Mad props to everyone who understands this!\",\n    isFavorite: false,\n  },\n  {\n    id: 998,\n    date: \"Feb 3, 2025\",\n    motto: \"How to nest components online fast\",\n    notes:\n      \"Today I learned about React Components and how to nest them like a pro. Application design is so much fun!\",\n    isFavorite: false,\n  },\n  {\n    id: 997,\n    date: \"Feb 2, 2025\",\n    motto: \"I'm a React Developer\",\n    notes: \"My React-ion when I learned about React: Yay!\",\n    isFavorite: false,\n  },\n];\n\nfunction App() {\n  const [entries, setEntries] = useState(initialEntries);\n\n  function handleAddEntry(newEntry) {\n    const date = new Date().toLocaleDateString(\"en-us\", {\n      dateStyle: \"medium\",\n    });\n    setEntries([\n      { id: uid(), date, ...newEntry, isFavorite: false },\n      ...entries,\n    ]);\n    console.log(entries);\n  }\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <main className=\"app__main\">\n        <EntryForm onAddEntry={handleAddEntry} />\n        <EntriesSection entries={entries} />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\n// - Add the key `isFavorite` with the value `false` to each entry in the `initialEntries` array.\n// - Add the key `isFavorite` with the value `false` to a newly created entry in the function `handleAddEntry`.\n\n// This was important to have a consistent shape of all entry objects ðŸš€\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,GAAG,QAAQ,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAG,CACrB;EACEC,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,4BAA4B;EACnCC,KAAK,EACH,4EAA4E;EAC9EC,UAAU,EAAE;AACd,CAAC,EACD;EACEJ,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,qBAAqB;EAC5BC,KAAK,EACH,gFAAgF;EAClFC,UAAU,EAAE;AACd,CAAC,EACD;EACEJ,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,oCAAoC;EAC3CC,KAAK,EACH,4GAA4G;EAC9GC,UAAU,EAAE;AACd,CAAC,EACD;EACEJ,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,uBAAuB;EAC9BC,KAAK,EAAE,+CAA+C;EACtDC,UAAU,EAAE;AACd,CAAC,CACF;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAACQ,cAAc,CAAC;EAEtD,SAASU,cAAcA,CAACC,QAAQ,EAAE;IAChC,MAAMT,IAAI,GAAG,IAAIU,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;MAClDC,SAAS,EAAE;IACb,CAAC,CAAC;IACFL,UAAU,CAAC,CACT;MAAER,EAAE,EAAEJ,GAAG,CAAC,CAAC;MAAEK,IAAI;MAAE,GAAGS,QAAQ;MAAEN,UAAU,EAAE;IAAM,CAAC,EACnD,GAAGG,OAAO,CACX,CAAC;IACFO,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;EACtB;EAEA,oBACET,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA,CAACH,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVvB,OAAA;MAAMkB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACzBnB,OAAA,CAACL,SAAS;QAAC6B,UAAU,EAAEb;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCvB,OAAA,CAACN,cAAc;QAACe,OAAO,EAAEA;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACPvB,OAAA,CAACJ,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACf,EAAA,CAxBQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA0BZ,eAAeA,GAAG;;AAElB;AACA;;AAEA;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}