{"ast":null,"code":"var _jsxFileName = \"/Users/benediktbrenk/neuefische/web-challenges/react-state-3/react-state-3_journal-app-form/src/components/EntryForm/index.js\";\nimport \"./EntryForm.css\";\nimport Button from \"../Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EntryForm(onAddEntry) {\n  function handleSubmit(event) {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const data = Object.fromEntries(formData);\n    console.log(data);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"entry-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"entry-form__title\",\n      children: \"New Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entry-form__fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"entry-form__field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"motto\",\n          children: \"Motto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"motto\",\n          id: \"motto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"entry-form__field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"notes\",\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"notes\",\n          id: \"notes\",\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"entry-form__button-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n// - In `handleSubmit` create an object with the keys `motto` and `notes` containing the fields' values.\n// - Call `onAddEntry` and pass the object.\n// - Make sure to reset the form after submitting.\n\n// Nice job! The component can now inform its parent when an entry should be added! ðŸš€\n_c = EntryForm;\nvar _c;\n$RefreshReg$(_c, \"EntryForm\");","map":{"version":3,"names":["Button","jsxDEV","_jsxDEV","EntryForm","onAddEntry","handleSubmit","event","preventDefault","formData","FormData","target","data","Object","fromEntries","console","log","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","id","rows","_c","$RefreshReg$"],"sources":["/Users/benediktbrenk/neuefische/web-challenges/react-state-3/react-state-3_journal-app-form/src/components/EntryForm/index.js"],"sourcesContent":["import \"./EntryForm.css\";\nimport Button from \"../Button\";\n\nexport default function EntryForm(onAddEntry) {\n  function handleSubmit(event) {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const data = Object.fromEntries(formData);\n    console.log(data);\n  }\n\n  return (\n    <form className=\"entry-form\" onSubmit={handleSubmit}>\n      <h2 className=\"entry-form__title\">New Entry</h2>\n      <div className=\"entry-form__fields\">\n        <div className=\"entry-form__field\">\n          <label htmlFor=\"motto\">Motto</label>\n          <input type=\"text\" name=\"motto\" id=\"motto\" />\n        </div>\n        <div className=\"entry-form__field\">\n          <label htmlFor=\"notes\">Notes</label>\n          <textarea name=\"notes\" id=\"notes\" rows=\"4\" />\n        </div>\n        <div className=\"entry-form__button-wrapper\">\n          <Button type=\"submit\">Create</Button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\n// - In `handleSubmit` create an object with the keys `motto` and `notes` containing the fields' values.\n// - Call `onAddEntry` and pass the object.\n// - Make sure to reset the form after submitting.\n\n// Nice job! The component can now inform its parent when an entry should be added! ðŸš€\n"],"mappings":";AAAA,OAAO,iBAAiB;AACxB,OAAOA,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,SAASC,SAASA,CAACC,UAAU,EAAE;EAC5C,SAASC,YAAYA,CAACC,KAAK,EAAE;IAC3BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACH,KAAK,CAACI,MAAM,CAAC;IAC3C,MAAMC,IAAI,GAAGC,MAAM,CAACC,WAAW,CAACL,QAAQ,CAAC;IACzCM,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EACnB;EAEA,oBACET,OAAA;IAAMc,SAAS,EAAC,YAAY;IAACC,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,gBAClDhB,OAAA;MAAIc,SAAS,EAAC,mBAAmB;MAAAE,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDpB,OAAA;MAAKc,SAAS,EAAC,oBAAoB;MAAAE,QAAA,gBACjChB,OAAA;QAAKc,SAAS,EAAC,mBAAmB;QAAAE,QAAA,gBAChChB,OAAA;UAAOqB,OAAO,EAAC,OAAO;UAAAL,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpCpB,OAAA;UAAOsB,IAAI,EAAC,MAAM;UAACC,IAAI,EAAC,OAAO;UAACC,EAAE,EAAC;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACNpB,OAAA;QAAKc,SAAS,EAAC,mBAAmB;QAAAE,QAAA,gBAChChB,OAAA;UAAOqB,OAAO,EAAC,OAAO;UAAAL,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpCpB,OAAA;UAAUuB,IAAI,EAAC,OAAO;UAACC,EAAE,EAAC,OAAO;UAACC,IAAI,EAAC;QAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACNpB,OAAA;QAAKc,SAAS,EAAC,4BAA4B;QAAAE,QAAA,eACzChB,OAAA,CAACF,MAAM;UAACwB,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;;AAEA;AACA;AACA;;AAEA;AAAAM,EAAA,GAhCwBzB,SAAS;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}