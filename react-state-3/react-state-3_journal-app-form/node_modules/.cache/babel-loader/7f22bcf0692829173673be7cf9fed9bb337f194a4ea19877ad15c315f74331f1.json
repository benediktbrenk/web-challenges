{"ast":null,"code":"var _jsxFileName = \"/Users/benediktbrenk/neuefische/web-challenges/react-state-3/react-state-3_journal-app-form/src/App.js\";\nimport \"./App.css\";\nimport EntriesSection from \"./components/EntriesSection\";\nimport EntryForm from \"./components/EntryForm\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialEntries = [{\n  id: 1000,\n  date: \"Feb 5, 2025\",\n  motto: \"We are in a state of chaos\",\n  notes: \"Today I learned about React State. It was fun! I can't wait to learn more.\"\n}, {\n  id: 999,\n  date: \"Feb 4, 2025\",\n  motto: \"Props, Props, Props\",\n  notes: \"Today I learned about React Props. Mad props to everyone who understands this!\"\n}, {\n  id: 998,\n  date: \"Feb 3, 2025\",\n  motto: \"How to nest components online fast\",\n  notes: \"Today I learned about React Components and how to nest them like a pro. Application design is so much fun!\"\n}, {\n  id: 997,\n  date: \"Feb 2, 2025\",\n  motto: \"I'm a React Developer\",\n  notes: \"My React-ion when I learned about React: Yay!\"\n}];\nconst [entries, setEntries] = {\n  initialEntries\n};\nfunction handleAddEntry(newEntry) {\n  const date = new Date().toLocaleDateString(\"en-us\", {\n    dateStyle: \"medium\"\n  });\n  setEntries([...entries, {\n    ...newEntry,\n    date: date\n  }]);\n}\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app__main\",\n      children: [/*#__PURE__*/_jsxDEV(EntryForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EntriesSection, {\n        entries: entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\n\n// Your new journal entry needs a date.\n\n// - Create a string containing the date in the desired format with the snippet below.\n// - Add the key `date` to the object describing the new entry.\n\n// ```js\n//\n// ```\n\n// Each entry in the `entries` array needs an ID â€“ a unique identifier.\n\n// - Install the npm package `uid` via the terminal. You can use the command below.\n// - Call the function `uid()` to generate a new ID.\n// - Add the key `id` to the object describing the new entry.\n\n// ```sh\n// npm install uid\n// ```\n\n// - Call the `setEntries` function and insert the new entry at the beginning of the array.\n// - Pass the `handleAddEntry` function with the prop `onAddEntry` to the `EntryForm` component.\n\n// Done! You can add new entries to your journal now! ðŸš€ ðŸš€ ðŸš€\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["EntriesSection","EntryForm","Footer","Header","jsxDEV","_jsxDEV","initialEntries","id","date","motto","notes","entries","setEntries","handleAddEntry","newEntry","Date","toLocaleDateString","dateStyle","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/benediktbrenk/neuefische/web-challenges/react-state-3/react-state-3_journal-app-form/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport EntriesSection from \"./components/EntriesSection\";\nimport EntryForm from \"./components/EntryForm\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\n\nconst initialEntries = [\n  {\n    id: 1000,\n    date: \"Feb 5, 2025\",\n    motto: \"We are in a state of chaos\",\n    notes:\n      \"Today I learned about React State. It was fun! I can't wait to learn more.\",\n  },\n  {\n    id: 999,\n    date: \"Feb 4, 2025\",\n    motto: \"Props, Props, Props\",\n    notes:\n      \"Today I learned about React Props. Mad props to everyone who understands this!\",\n  },\n  {\n    id: 998,\n    date: \"Feb 3, 2025\",\n    motto: \"How to nest components online fast\",\n    notes:\n      \"Today I learned about React Components and how to nest them like a pro. Application design is so much fun!\",\n  },\n  {\n    id: 997,\n    date: \"Feb 2, 2025\",\n    motto: \"I'm a React Developer\",\n    notes: \"My React-ion when I learned about React: Yay!\",\n  },\n];\n\nconst [entries, setEntries] = { initialEntries };\n\nfunction handleAddEntry(newEntry) {\n  const date = new Date().toLocaleDateString(\"en-us\", { dateStyle: \"medium\" });\n  setEntries([...entries, { ...newEntry, date: date }]);\n}\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <main className=\"app__main\">\n        <EntryForm />\n        <EntriesSection entries={entries} />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\n// Your new journal entry needs a date.\n\n// - Create a string containing the date in the desired format with the snippet below.\n// - Add the key `date` to the object describing the new entry.\n\n// ```js\n//\n// ```\n\n// Each entry in the `entries` array needs an ID â€“ a unique identifier.\n\n// - Install the npm package `uid` via the terminal. You can use the command below.\n// - Call the function `uid()` to generate a new ID.\n// - Add the key `id` to the object describing the new entry.\n\n// ```sh\n// npm install uid\n// ```\n\n// - Call the `setEntries` function and insert the new entry at the beginning of the array.\n// - Pass the `handleAddEntry` function with the prop `onAddEntry` to the `EntryForm` component.\n\n// Done! You can add new entries to your journal now! ðŸš€ ðŸš€ ðŸš€\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,cAAc,MAAM,6BAA6B;AACxD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,cAAc,GAAG,CACrB;EACEC,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,4BAA4B;EACnCC,KAAK,EACH;AACJ,CAAC,EACD;EACEH,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,qBAAqB;EAC5BC,KAAK,EACH;AACJ,CAAC,EACD;EACEH,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,oCAAoC;EAC3CC,KAAK,EACH;AACJ,CAAC,EACD;EACEH,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,uBAAuB;EAC9BC,KAAK,EAAE;AACT,CAAC,CACF;AAED,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG;EAAEN;AAAe,CAAC;AAEhD,SAASO,cAAcA,CAACC,QAAQ,EAAE;EAChC,MAAMN,IAAI,GAAG,IAAIO,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;IAAEC,SAAS,EAAE;EAAS,CAAC,CAAC;EAC5EL,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;IAAE,GAAGG,QAAQ;IAAEN,IAAI,EAAEA;EAAK,CAAC,CAAC,CAAC;AACvD;AAEA,SAASU,GAAGA,CAAA,EAAG;EACb,oBACEb,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA,CAACF,MAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVnB,OAAA;MAAMc,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACzBf,OAAA,CAACJ,SAAS;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACbnB,OAAA,CAACL,cAAc;QAACW,OAAO,EAAEA;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACPnB,OAAA,CAACH,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACC,EAAA,GAXQP,GAAG;AAaZ,eAAeA,GAAG;;AAElB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}